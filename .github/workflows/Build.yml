name: Build and Deploy .NET Framework 4.8 WebApp

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1Ô∏è‚É£ Checkout your code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup tools
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2

      # 3Ô∏è‚É£ Restore dependencies
      - name: Restore NuGet packages
        run: nuget restore FileUploadwithModelandPreview/FileUploadwithModelandPreview.sln

      # 4Ô∏è‚É£ Ensure publish folder exists (prevents missing path errors)
      - name: Create publish directory
        run: |
          $publishPath = "${{ github.workspace }}\\FileUploadwithModelandPreview\\FileUploadwithModelandPreview\\publish"
          if (!(Test-Path $publishPath)) {
            New-Item -ItemType Directory -Force -Path $publishPath
            Write-Host "Created folder: $publishPath"
          } else {
            Write-Host "Folder already exists: $publishPath"
          }

      # 5Ô∏è‚É£ Build and publish the web app
      - name: Build and Publish Web App
        run: |
          msbuild FileUploadwithModelandPreview/FileUploadwithModelandPreview/FileUploadwithModelandPreview.csproj `
            /p:Configuration=Release `
            /p:DeployOnBuild=true `
            /p:WebPublishMethod=FileSystem `
            /p:DeleteExistingFiles=True `
            /p:PublishUrl="${{ github.workspace }}\\FileUploadwithModelandPreview\\FileUploadwithModelandPreview\\publish"

      # 6Ô∏è‚É£ Verify the output folder content
      - name: Verify publish output
        run: dir "${{ github.workspace }}\\FileUploadwithModelandPreview\\FileUploadwithModelandPreview\\publish"
        
      - name: Upload Artifact (WebApp)
        uses: actions/upload-artifact@v4
        with:
          name: WebApp
          path: ${{ github.workspace }}\FileUploadwithModelandPreview\FileUploadwithModelandPreview\publish

      # 7Ô∏è‚É£ Deploy to Azure App Service (using Publish Profile)

      - name: Login to Azure using OIDC
        uses: azure/login@v2
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: "shoppingapp132"
          package: "${{ github.workspace }}\\FileUploadwithModelandPreview\\FileUploadwithModelandPreview\\publish"

      # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ OPTION 2: Using Federated OIDC Identity (advanced) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
      # Uncomment below *only* if you‚Äôve configured a Federated Identity in Entra ID for this repo
      #
      # - name: Login to Azure using OIDC
      #   uses: azure/login@v2
      #   with:
      #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
      #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #
      # - name: Deploy to Azure Web App (via OIDC)
      #   uses: azure/webapps-deploy@v3
      #   with:
      #     app-name: "shoppingapp132"
      #     package: "${{ github.workspace }}\\publish"





# name: Build .NET Framework 4.8 WebApp

# on:
#   workflow_dispatch:
#   push:
#     branches: [ main ]
# permissions:
#   id-token: write
#   contents: read
# jobs:
#   build:
#     runs-on: windows-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Setup MSBuild
#         uses: microsoft/setup-msbuild@v2

#       - name: Setup NuGet
#         uses: NuGet/setup-nuget@v2

#       - name: Show repository structure
#         run: |
#           echo "Current workspace: ${{ github.workspace }}"
#           dir ${{ github.workspace }} -Recurse

#       - name: Restore NuGet packages
#         run: nuget restore FileUploadwithModelandPreview/FileUploadwithModelandPreview.sln

#       - name: Build Solution
#         run: msbuild FileUploadwithModelandPreview/FileUploadwithModelandPreview.sln /p:Configuration=Release

#       - name: Build and Publish Web App
#         run: |
#           msbuild FileUploadwithModelandPreview/FileUploadwithModelandPreview/FileUploadwithModelandPreview.csproj `
#             /p:Configuration=Release `
#             /p:DeployOnBuild=true `
#             /p:WebPublishMethod=FileSystem `
#             /p:DeleteExistingFiles=False `
#             /p:PublishUrl="${{ github.workspace }}\\drop\\publish"

#       - name: Verify publish output
#         run: dir "${{ github.workspace }}\\drop\\publish"

#       - name: Create Deployable Zip (for artifact)
#         run: |
#           cd ${{ github.workspace }}\\drop\\publish
#           powershell -command "Compress-Archive -Path * -DestinationPath ${{ github.workspace }}\\drop\\FileUploadwithModelandPreview.zip"

#       - name: Upload Artifact (WebApp.zip)
#         uses: actions/upload-artifact@v4
#         with:
#           name: WebApp
#           path: ${{ github.workspace }}\drop\FileUploadwithModelandPreview.zip
          
# # Step 7: Deploy to Azure App Service

#       - name: Login to Azure using OIDC
#         uses: azure/login@v2
#         with:
#             client-id: ${{ secrets.AZURE_CLIENT_ID }}
#             tenant-id: ${{ secrets.AZURE_TENANT_ID }}
#             subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            
#       - name: Deploy to Azure Web App
#         uses: azure/webapps-deploy@v3
#         with:
#           app-name: "shoppingapp132"          # üëà Replace with your Azure App Service name
#           #slot-name: "production"
#           #publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
#           package: "${{ github.workspace }}\\drop\\publish"
