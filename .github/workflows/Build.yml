name: Build and Publish ASP.NET App

on:
  push:
    branches: [ none ]
  # pull_request:
  #   branches: [ main ]
    
permissions:
  id-token: write
  contents: read   

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1️⃣ Checkout code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2️⃣ Install NuGet
      - name: Install NuGet
        uses: NuGet/setup-nuget@v1
        with:
          nuget-version: 'latest'

      # 3️⃣ Restore NuGet Packages
      - name: Restore NuGet Packages
        run: nuget restore FileUploadwithModelandPreview/FileUploadwithModelandPreview.sln

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      # 4️⃣ Build Solution
      - name: Build Solution
        shell: pwsh
        run: |
          msbuild FileUploadwithModelandPreview/FileUploadwithModelandPreview.sln `
            /p:Configuration=Release `
            /p:DeployOnBuild=true `
            /p:WebPublishMethod=FileSystem `
            /p:PackageAsSingleFile=false `
            /p:SkipInvalidConfigurations=true `
            /p:PackageLocation="${{ github.workspace }}\Package"


      # 5️⃣ Locate web.config and publish folders
      - name: Locate publish output
        shell: pwsh
        run: |
          Write-Host "=== Searching for web.config and publish folders ==="
          Get-ChildItem "${{ github.workspace }}" -Recurse -Filter "web.config" | ForEach-Object {
              Write-Host "Found web.config at: $($_.Directory.FullName)"
          }

      # 6️⃣ Copy publish output
      - name: Copy publish output to artifact staging directory
        shell: pwsh
        run: |
          $srcCandidates = @(
            "${{ github.workspace }}\FileUploadwithModelandPreview\FileUploadwithModelandPreview\obj\Release\Package\PackageTmp",
            "${{ github.workspace }}\FileUploadwithModelandPreview\FileUploadwithModelandPreview\bin\Release"
          )

          $dst = "${{ github.workspace }}\WebApp"
          New-Item -ItemType Directory -Force -Path $dst | Out-Null

          $found = $false
          foreach ($src in $srcCandidates) {
            if (Test-Path $src) {
              Write-Host "✅ Found publish folder at: $src"
              Copy-Item -Path "$src\*" -Destination $dst -Recurse -Force
              $found = $true
              break
            }
          }

          if (-not $found) {
            Write-Host "⚠️ No publish output found. Check build step above for errors."
            exit 1
          }

      # 7️⃣ Verify artifact folder contents
      - name: List Artifact Staging Directory
        shell: pwsh
        run: |
          Write-Host "=== Contents of ${{ github.workspace }}\WebApp ==="
          Get-ChildItem "${{ github.workspace }}\WebApp" -Recurse

      # 8️⃣ Publish artifact
      - name: Publish Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: drop
          path: WebApp
#===============================================================================


            
  # # 2️⃣ Deploy Job
  # deploy:
  #   name: Deploy to Azure Web App
  #   runs-on: windows-latest
  #   needs: build   # ensures deploy runs only if build succeeds

  #   steps:
  #     - name: Download Build Artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: drop
  #         path: ./drop

  #     - name: Verify artifact contents
  #       run: |
  #         Write-Host "=== Contents of downloaded artifact ==="
  #         Get-ChildItem ./drop -Recurse
  #       shell: pwsh
        

  #     - name: Login to Azure using OIDC
  #       uses: azure/login@v2
  #       with:
  #           client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #           tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #           subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            
  #     - name: Deploy to Azure Web App
  #       uses: azure/webapps-deploy@v3
  #       with:
  #         app-name: 'shoppingapp132'
  #         slot-name: 'production'
  #         #publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
  #         package: './drop'




